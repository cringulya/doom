#+title: Config

* TABLE OF CONTENTS :toc:
- [[#init][Init]]
  - [[#theme][Theme]]
  - [[#font][Font]]
  - [[#evil-tweaks][Evil tweaks]]
  - [[#keybindings][Keybindings]]
- [[#plugins][Plugins]]
  - [[#dired][Dired]]
  - [[#completion][Completion]]
  - [[#coding][Coding]]

* Init
** Theme
#+begin_src emacs-lisp
(setq doom-theme 'doom-dracula)
#+end_src

** Font
#+begin_src emacs-lisp
(setq doom-font (font-spec :family "Iosevka Nerd Font Mono" :size 20 :weight 'regular)
      doom-symbol-font (font-spec :family "Iosevka Nerd Font Mono")
      doom-big-font (font-spec :family "Iosevka Nerd Font Mono" :size 24))
#+end_src

** Evil tweaks
#+begin_src emacs-lisp
;; restore s/S vim behaviour
(remove-hook 'doom-first-input-hook #'evil-snipe-mode)

;; enable clipboard
(setq select-enable-clipboard t
      select-enable-primary t
      save-interprogram-paste-before-kill t
      mouse-yank-at-point t)

(setq-default evil-clipboard t)
#+end_src


** Keybindings
#+begin_src emacs-lisp

(map! :map evil-normal-state-map
      :n "C-r" #'undo-redo
      :n "C-j" #'evil-window-down
      :n "C-k" #'evil-window-up
      :n "C-h" #'evil-window-left
      :n "C-l" #'evil-window-right
      :n "Q" #'kill-this-buffer
      :n "L" #'evil-end-of-line
      :n "H" #'evil-beginning-of-line
      :n "M-F" #'lsp-format-buffer)
#+end_src

* Plugins
** Dired
#+begin_src emacs-lisp
(defun vertico-kill-buffer ()
  (interactive)
  (when-let ((buffer (get-buffer (vertico--candidate))))
    (kill-buffer buffer)
    (message "Killed buffer: %s" (buffer-name buffer))))

(map! :map vertico-map
      "C-d" #'vertico-kill-buffer)
#+end_src

** Completion
#+begin_src emacs-lisp
(setq tab-always-indent t)
(defun my/indent-or-complete ()
  (interactive)
  (if (and (bound-and-true-p corfu-mode) (corfu-popupinfo--visible-p))
    (corfu-complete)  ;; Complete if the corfu popup is active
    (doom/dumb-indent)))  ;; Otherwise, indent the current line

(after! corfu
  (setq +corfu-want-ret-to-confirm t)
  (setq +corfu-want-tab-prefer-expand-snippets t)
  (setq +corfu-want-tab-prefer-navigating-snippets t)
  (setq +corfu-want-tab-prefer-navigating-org-tables t)
  (setq corfu-preview-current nil)
  (setq corfu-preselect 'first)

  (map! :map corfu-mode-map
        :gi "TAB"     #'my/indent-or-complete
        :gi "<tab>"     #'my/indent-or-complete)
  (map! :map corfu-map
        :gi "TAB"     #'corfu-insert
        :gi "<tab>"     #'corfu-insert))
#+end_src

** Coding
*** Lsp
#+begin_src emacs-lisp
(after! lsp-mode
  (setq lsp-clients-clangd-executable "clangd")) ; Ensure `clangd` is installed
#+end_src
*** C/C++
#+begin_src emacs-lisp
(use-package! cmake-ide
  :config (cmake-ide-setup))
#+end_src
